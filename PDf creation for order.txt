var date = DateTime.Now.ToShortDateString().ToString();
            var dateNormilized = date.Replace("/", "_");
            string fileName = "PDF_" + dateNormilized + "_" + DateTime.UtcNow.Millisecond + ".pdf";

            string folderPath = _webHostEnvironment.WebRootPath + $"\\PDF\\{exisistingOrder.UserId}\\{exisistingOrder.OrderUniqueIdentifier}";
            string path = System.IO.Path.Combine(folderPath, fileName);

            decimal TotalDiscountOfAllItems = 0;
            decimal TotalPriceOfAllItems = 0;

            if (!System.IO.Directory.Exists(folderPath))
            {
                System.IO.Directory.CreateDirectory(folderPath);
            }
            PdfDocument pdfDoc = new PdfDocument(new PdfWriter(path));
            iText.Layout.Document doc = new iText.Layout.Document(pdfDoc, PageSize.A4,true);
            doc.SetMargins(25,25,25,25);

            var font = PdfFontFactory.CreateFont(iText.IO.Font.Constants.StandardFonts.TIMES_ROMAN);
            var aligmentLeft = iText.Layout.Properties.TextAlignment.LEFT;
            var aligmentCenter = iText.Layout.Properties.TextAlignment.CENTER;
            string imagePath = _webHostEnvironment.WebRootPath + "\\ImageForPDF\\Logo.png";
            iText.Layout.Element.Image image = new iText.Layout.Element.Image
                (ImageDataFactory.Create(imagePath));
            image.SetFixedPosition(400, 700);
            image.ScaleToFit(90, 90);
            doc.Add(image);

            //customer info

            Paragraph name = new Paragraph(exisistingOrder.UsersFirstName + " " + exisistingOrder.UsersLastName)
                .SetFont(font)
                .SetFontSize(12)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(name);

            Paragraph email = new Paragraph(Paragraph email = new Paragraph(exisistingOrder.UsersEmail)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(email);

            Paragraph street = new Paragraph(exisistingOrder.Street)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(street);

            if (itemExchangeRequest.AppartamentNumber == null || itemExchangeRequest.AppartamentNumber == 0)
            {
                Paragraph addressHouseNum = new Paragraph(itemExchangeRequest.HouseNumber.ToString())
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
                doc.Add(addressHouseNum);
            }
            else
            {
                Paragraph addressHouseApp = new Paragraph(exisistingOrder.HouseNumber.ToString() + "-" +exisistingOrder.AppartamentNumber.ToString())
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
                doc.Add(addressHouseApp);
            }

            Paragraph addressCity = new Paragraph(exisistingOrder.City)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(addressCity);

            Paragraph addressRegion = new Paragraph(exisistingOrder.Region)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(addressRegion);

            Paragraph addressCountry = new Paragraph(exisistingOrder.Country)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(addressCountry);

            Paragraph postalCode = new Paragraph(exisistingOrder.PostalCode)
                .SetFont(font)
                .SetFontSize(14)
                .SetTextAlignment(aligmentLeft)
                .SetMarginBottom(0);
            doc.Add(postalCode);

            Paragraph busineesName = new Paragraph("My Bussines Name")
               .SetFont(font)
               .SetFontSize(12)
               .SetTextAlignment(aligmentCenter)
               .SetPaddingTop(20);
            doc.Add(busineesName);

            Paragraph orderId = new Paragraph("Invoice for order: " + exisistingOrder.OrderUniqueIdentifier)
               .SetFont(font)
               .SetFontSize(12)
               .SetTextAlignment(aligmentCenter)
               .SetPaddingTop(5);
            doc.Add(orderId);


            //order items table

            Table ItemTable = new Table(7);
            ItemTable.SetMarginTop(20);
            ItemTable.SetHorizontalAlignment(HorizontalAlignment.CENTER);
            ItemTable.SetWidth(500);


            //iText.Kernel.Colors
            Color textColorTableHeadings = new DeviceRgb(255,255,255);
            Color bgColorTableHeadings = new DeviceRgb(1, 1, 1);

            Cell cell1 = new Cell().Add(new Paragraph("PRODUCT NAME")
                .SetFontColor(textColorTableHeadings)
                .SetFontSize(8)
                .SetTextAlignment(aligmentCenter));
            cell1.SetBackgroundColor(bgColorTableHeadings);
            cell1.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell1);

            Cell cell2 = new Cell().Add(new Paragraph("PRODUCT COLOR")
                .SetFontColor(textColorTableHeadings)
                .SetFontSize(8)
                .SetTextAlignment(aligmentCenter));
            cell2.SetBackgroundColor(bgColorTableHeadings);
            cell2.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell2);

            Cell cell3 = new Cell().Add(new Paragraph("PRODUCT SIZE")
                .SetFontColor(textColorTableHeadings)
                .SetFontSize(8)
                .SetTextAlignment(aligmentCenter));
            cell3.SetBackgroundColor(bgColorTableHeadings);
            cell3.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell3);

            Cell cell4 = new Cell().Add(new Paragraph("QUANTITY")
               .SetFontColor(textColorTableHeadings)
               .SetFontSize(8)
               .SetTextAlignment(aligmentCenter));
            cell4.SetBackgroundColor(bgColorTableHeadings);
            cell4.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell4);

            Cell cell5 = new Cell().Add(new Paragraph("PRICE")
               .SetFontColor(textColorTableHeadings)
               .SetFontSize(8)
               .SetTextAlignment(aligmentCenter));
            cell5.SetBackgroundColor(bgColorTableHeadings);
            cell5.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell5);

            Cell cell6 = new Cell().Add(new Paragraph("DISCOUNT IN %")
               .SetFontColor(textColorTableHeadings)
               .SetFontSize(8)
               .SetTextAlignment(aligmentCenter));
            cell6.SetBackgroundColor(bgColorTableHeadings);
            cell6.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell6);

            Cell cell7 = new Cell().Add(new Paragraph("TOTAL PRICE")
                .SetFontColor(textColorTableHeadings)
                .SetFontSize(8)
                .SetTextAlignment(aligmentCenter));
            cell7.SetBackgroundColor(bgColorTableHeadings);
            cell7.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            ItemTable.AddCell(cell7);


            foreach (var item in exisistingOrder.OriginalOrderFromCustomer.OrderItems)
            {

                Cell CellProductName = new Cell().Add(new Paragraph(item.BaseProductName)
                    .SetTextAlignment(aligmentCenter)
                    .SetFontSize(8));
                CellProductName.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductName);

                Cell CellProductColor = new Cell().Add(new Paragraph(item.ProductVariantColor)
                    .SetTextAlignment(aligmentCenter)
                    .SetFontSize(8));
                CellProductColor.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductColor);

                Cell CellProductSize = new Cell().Add(new Paragraph(item.ProducVariantSize)
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
                CellProductSize.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductSize);

                Cell CellProductQuantity = new Cell().Add(new Paragraph(item.Quantity.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
                CellProductQuantity.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductQuantity);

                Cell CellProductPrice = new Cell().Add(new Paragraph(item.Price.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
                CellProductPrice.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductPrice);

                Cell CellProductDiscount = new Cell().Add(new Paragraph(item.Discount.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
                CellProductDiscount.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProductDiscount);


                Cell CellProdutTotalPrice = new Cell().Add(new Paragraph(item.TotalPrice.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
                CellProductDiscount.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
                ItemTable.AddCell(CellProdutTotalPrice);


                var totalDiscunt = ((item.Price * item.Quantity) * item.Discount / 100);
                var totalDiscountDecimal = decimal.Round(totalDiscunt, 2);
                TotalDiscountOfAllItems += totalDiscountDecimal;
                TotalPriceOfAllItems += item.TotalPrice;

            }

            doc.Add(ItemTable);



            Table PriceTable = new Table(2);
            PriceTable.SetMarginTop(20);
            PriceTable.SetHorizontalAlignment(HorizontalAlignment.CENTER);
            PriceTable.SetWidth(200);

            Cell cellDiscountName = new Cell().Add(new Paragraph("DISCOUNT")
                .SetFontColor(textColorTableHeadings)
                .SetFontSize(8)
                .SetTextAlignment(aligmentCenter));
            cellDiscountName.SetBackgroundColor(bgColorTableHeadings);
            cellDiscountName.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(cellDiscountName);

            Cell CellDiscountValue = new Cell().Add(new Paragraph("$"+TotalDiscountOfAllItems.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
            CellDiscountValue.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(CellDiscountValue);

            Cell cellPriceName = new Cell().Add(new Paragraph("PRICE")
               .SetFontColor(textColorTableHeadings)
               .SetFontSize(8)
               .SetTextAlignment(aligmentCenter));
            cellPriceName.SetBackgroundColor(bgColorTableHeadings);
            cellPriceName.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(cellPriceName);

            Cell CellPriceValue = new Cell().Add(new Paragraph("$" + TotalPriceOfAllItems.ToString())
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
            CellDiscountValue.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(CellPriceValue);

            Cell cellShippingPriceName = new Cell().Add(new Paragraph("SHIPPING PRICE")
               .SetFontColor(textColorTableHeadings)
               .SetFontSize(8)
               .SetTextAlignment(aligmentCenter));
            cellShippingPriceName.SetBackgroundColor(bgColorTableHeadings);
            cellShippingPriceName.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(cellShippingPriceName);

            Cell CellShippingPriceValue = new Cell().Add(new Paragraph("$" + exisistingOrder.OriginalOrderFromCustomer.ShippingPrice)
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
            CellDiscountValue.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(CellShippingPriceValue);

            var totalPriceInCurrency = TotalPriceOfAllItems + exisistingOrder.OriginalOrderFromCustomer.ShippingPrice;

            Cell cellTotalPriceName = new Cell().Add(new Paragraph("TOTAL PRICE")
              .SetFontColor(textColorTableHeadings)
              .SetFontSize(8)
              .SetTextAlignment(aligmentCenter));
            cellTotalPriceName.SetBackgroundColor(bgColorTableHeadings);
            cellTotalPriceName.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(cellTotalPriceName);

            Cell CellTotalPriceValue = new Cell().Add(new Paragraph("$" + totalPriceInCurrency)
                   .SetTextAlignment(aligmentCenter)
                   .SetFontSize(8));
            CellTotalPriceValue.SetBorder(new SolidBorder(ColorConstants.GRAY, 2));
            PriceTable.AddCell(CellTotalPriceValue);


            doc.Add(PriceTable);

            doc.Close();

            return path;
        }